

  ////////////////////////////////////////
  //
  // INDEX

  // plugin.tx_browser_pi1
  //    views
  //      301: +Org: Documents



  ////////////////////////////////////////
  //
  // plugin.tx_browser_pi1

plugin.tx_browser_pi1 {
  
  template {
    extensions {
      org {
        doc {
          name      = +Org: Documents
          file      = EXT:org/res/html/doc/301/default.tmpl
          csvViews  = 301
        }
      }
    }
  }

  views {
    list {
      301 = +Org: Documents
      301 {
        name    = +Org: Documents
        showUid = docUid
        displayList < plugin.tx_browser_pi1.displayList
        displayList {
          selectBox_orderBy.display = 0
        }
        select (
          tx_org_doc.title,
          tx_org_doc.subtitle,
          tx_org_doc.datetime,

          tx_org_doc.teaser_title,
          tx_org_doc.teaser_subtitle,
          tx_org_doc.teaser_short,

          tx_org_doc.type,

          tx_org_doc.bodytext,

          tx_org_doc.documents,
          tx_org_doc.documents_from_path,
          tx_org_doc.documentslayout,
          tx_org_doc.documentscaption,
          tx_org_doc.documentssize,

          tx_org_doc.thumbnail,
          tx_org_doc.thumbnail_width,
          tx_org_doc.thumbnail_height,

          tx_org_doc.linkicon_width,
          tx_org_doc.linkicon_height,

          tx_org_doc.keywords,
          tx_org_doc.description
        )
        orderBy (
          tx_org_doc.datetime DESC
        )
        csvLinkToSingleView = tx_org_doc.title
        tx_org_doc {
            // thumbnail
          thumbnail < tt_content.uploads.20
          thumbnail {
            userFunc = tx_browser_cssstyledcontent->render_uploads
            filePath >
            itemRendering {
              10 {
                if    >
                wrap  >
              }
              20 >
              30 >
              wrap = <div class="csc-uploads-thumbnail csc-uploads-thumbnail-first">|</div> |*| <div class="csc-uploads-thumbnail csc-uploads-thumbnail-even">|</div> || <div class="csc-uploads-thumbnail">|</div> |*| <div class="csc-uploads-thumbnail csc-uploads-thumbnail-last">|</div>
            }
            linkProc {
              iconCObject {
                file {
                  width = 80
                }
              }
              tx_browser_pi1 = TEXT
              tx_browser_pi1 {
                typolink {
                  parameter         = {$plugin.org.pages.doc}
                  additionalParams  = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###&tx_browser_pi1[download]=###FILENAME###
                  useCacheHash      = 1
                  returnLast        = url
                }
              }
            }
            tableField = tx_org_doc.documents
            fields {
              from_path = ###TX_ORG_DOC.DOCUMENTS_FROM_PATH###
              files     = ###TX_ORG_DOC.DOCUMENTS###
              files {
                override = ###TX_ORG_DOC.THUMBNAIL###
              }
              layout    = 2
            }
            stdWrap {
              if.isTrue = ###TX_ORG_DOC.THUMBNAIL######TX_ORG_DOC.DOCUMENTS######TX_ORG_DOC.DOCUMENTS_FROM_PATH###
            }
          }
          title = COA
          title {
              // doc_download, doc_download_shipping, doc_shipping
            10 = CASE
            10 {
              key = ###TX_ORG_DOC.TYPE###
                // doc_download
              default = COA
              default {
                10 = TEXT
                10 {
                  if.isTrue = ###TX_ORG_DOC.TEASER_TITLE###
                  value     = ###TX_ORG_DOC.TEASER_TITLE###
                  typolink {
                    parameter         = {$plugin.org.pages.doc} - linktosingle
                    additionalParams  = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###
                    useCacheHash      = 1
                  }
                }
                11 = TEXT
                11 {
                  if.isFalse  = ###TX_ORG_DOC.TEASER_TITLE###
                  value       = ###TX_ORG_DOC.TITLE###
                  typolink {
                    parameter         = {$plugin.org.pages.doc} - linktosingle
                    additionalParams  = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###
                    useCacheHash      = 1
                  }
                }
              }
              XXX_doc_download_shipping = COA
              XXX_doc_download_shipping {
              }
              XXX_doc_shipping = COA
              XXX_doc_shipping {
              }
            }
          }
          subtitle = COA
          subtitle {
            10 = TEXT
            10 {
              if.isTrue = ###TX_ORG_DOC.TEASER_SUBTITLE###
              value     = ###TX_ORG_DOC.TEASER_SUBTITLE###
            }
            11 = TEXT
            11 {
              if.isFalse  = ###TX_ORG_DOC.TEASER_SUBTITLE###
              value       = ###TX_ORG_DOC.SUBTITLE###
            }
          }
          teaser_short = COA
          teaser_short {
            10 = TEXT
            10 {
              value       = ###TX_ORG_DOC.DATETIME###
              strftime    = %d. %b %Y
              noTrimWrap  = |<span class="datetime">| &ndash;</span> |
            }
            11 = TEXT
            11 {
              value       = ###TX_ORG_DOC.TEASER_SHORT###
            }
            12 = TEXT
            12 {
              if {
                isFalse = ###TX_ORG_DOC.TEASER_SHORT###
              }
              value       = ###TX_ORG_DOC.BODYTEXT###
              crop        = 200 | ... | 1
              stripHtml = 1
            }
              // doc_download, doc_download_shipping, doc_shipping
            13 = CASE
            13 {
              key = ###TX_ORG_DOC.TYPE###
                // doc_download
              default = TEXT
              default {
                value = more &raquo;
                lang.de = mehr &raquo;
                noTrimWrap = | <span class="more">|</span>|
                typolink {
                  parameter = {$plugin.org.pages.doc} - linktosingle
                  additionalParams = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###&###CHASH###
                }
              }
              XXX_doc_download_shipping = TEXT
              XXX_doc_download_shipping {
              }
              XXX_doc_shipping = TEXT
              XXX_doc_shipping {
              }
            }
          }
        }
        filter {
          tx_org_doc {
            datetime < plugin.tx_browser_pi1.displayList.master_templates.selectbox
            datetime {
              first_item {
                stdWrap {
                  data = LLL:EXT:org/locallang_db.xml:filter_phrase.period
                }
              }
              wrap = <span class="category_menu">|</span>
              wrap {
                item {
                  //display_without_any_hit = 1
                  stdWrap {
                    htmlSpecialChars = 0
                    crop >
                  }
                }
              }
              order.field = uid
              area < plugin.tx_browser_pi1.displayList.master_templates.areas.sample_period
              area {
                interval {
                  case = year
                  monthXYZ {
                    times_stdWrap {
                      value = 3
                    }
                    value_stdWrap {
                      // %Y: full year like 2009
                      strftime = %Y
                    }
                  }
                }
              }
            }
          }
          tx_org_doccat {
            title < plugin.tx_browser_pi1.displayList.master_templates.selectbox
            title {
              first_item {
                stdWrap {
                  data = LLL:EXT:org/locallang_db.xml:filter_phrase.doccat
                }
              }
              wrap = <span class="selectbox">|</span>
              wrap {
                item {
                  stdWrap {
                    crop = 30 | ... | 1
                  }
                }
              }
            }
          }
          tx_org_docmedia {
            title < plugin.tx_browser_pi1.displayList.master_templates.selectbox
            title {
              first_item {
                stdWrap {
                  data = LLL:EXT:org/locallang_db.xml:filter_phrase.docmedia
                }
              }
              wrap = <span class="selectbox">|</span>
              wrap {
                item {
                  stdWrap {
                    crop = 30 | ... | 1
                  }
                }
              }
            }
          }
        }
      }
    }
    single {
      301 = +Org: Documents
      301 {
        marker < plugin.tx_browser_pi1.marker
        marker {
          my_listview_page = TEXT
          my_listview_page {
            value = All Documents &raquo;
            lang.de = Alle Dokumente &raquo;
            typolink {
              parameter = {$plugin.org.pages.doc}
              title {
                value = All Documents
                lang.de = Alle Dokumente
              }
            }
          }
          my_singleview_title = TEXT
          my_singleview_title {
            value   = Document
            lang.de = Nachricht
            wrap    = <div class="header01">|</div>
          }
        }
        select (
          tx_org_doc.title,
          tx_org_doc.subtitle,
          tx_org_doc.datetime,
          tx_org_doc.bodytext,

          tx_org_doc.documents,
          tx_org_doc.documents_from_path,
          tx_org_doc.documentslayout,
          tx_org_doc.documentscaption,
          tx_org_doc.documentssize,

          tx_org_doc.thumbnail,
          tx_org_doc.thumbnail_width,
          tx_org_doc.thumbnail_height,

          tx_org_doc.linkicon_width,
          tx_org_doc.linkicon_height,

          tx_org_doc.keywords,
          tx_org_doc.description,

          tx_org_doccat.title,
          tx_org_docmedia.title
        )
        tx_org_doc {
            // thumbnail, subtitle, title, datetime, bodytext, filelink
          title = COA
          title {
              // subtitle
            10 = TEXT
            10 {
              required  = 1
              value     = ###TX_ORG_DOC.SUBTITLE###
              wrap      = <h2 class="doc_subtitle">|</h2>
            }
              // title
            20 = TEXT
            20 {
              required  = 1
              value     = ###TX_ORG_DOC.TITLE###
              wrap      = <h1 class="doc_title csc-firstHeader">|</h1>
            }
              // thumbnail
            30 < tt_content.uploads.20
            30 {
              userFunc = tx_browser_cssstyledcontent->render_uploads
              filePath >
              itemRendering {
                10 {
                  if    >
                  wrap  >
                }
                20 >
                30 >
                wrap = <div class="csc-uploads-thumbnail csc-uploads-thumbnail-first">|</div> |*| <div class="csc-uploads-thumbnail csc-uploads-thumbnail-even">|</div> || <div class="csc-uploads-thumbnail">|</div> |*| <div class="csc-uploads-thumbnail csc-uploads-thumbnail-last">|</div>
              }
              linkProc {
                iconCObject {
                  file {
                    width   = ###TX_ORG_DOC.THUMBNAIL_WIDTH###
                    height  = ###TX_ORG_DOC.THUMBNAIL_HEIGHT###
                  }
                }
                tx_browser_pi1 = TEXT
                tx_browser_pi1 {
                  typolink {
                    parameter         = {$plugin.org.pages.doc}
                    additionalParams  = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###&tx_browser_pi1[download]=###FILENAME###
                    useCacheHash      = 1
                    returnLast        = url
                  }
                }
              }
              tableField = tx_org_doc.documents
              fields {
                from_path = ###TX_ORG_DOC.DOCUMENTS_FROM_PATH###
                files     = ###TX_ORG_DOC.DOCUMENTS###
                files {
                  override = ###TX_ORG_DOC.THUMBNAIL###
                }
                layout    = 2
              }
              stdWrap {
                if.isTrue = ###TX_ORG_DOC.THUMBNAIL######TX_ORG_DOC.DOCUMENTS######TX_ORG_DOC.DOCUMENTS_FROM_PATH###
              }
            }
              // datetime, bodytext
            40 = COA
            40 {
              stdWrap.parseFunc < lib.parseFunc_RTE
                // datetime
              10 = TEXT
              10 {
                value       = ###TX_ORG_DOC.DATETIME###
                strftime    = %d. %b. %Y
                noTrimWrap  = |<span class="datetime">| &ndash;</span> |
              }
                // bodytext
              20 = TEXT
              20 {
                value = ###TX_ORG_DOC.BODYTEXT###
              }
            }
              // filelink
            50 < tt_content.uploads.20
            50 {
              userFunc = tx_browser_cssstyledcontent->render_uploads
              filePath >
              itemRendering {
                10 {
                  if {
                    isPositive.field >
                    isPositive = ###TX_ORG_DOC.DOCUMENTSLAYOUT###
                  }
                }
                20 {
                  1 {
                    wrap = |
                    data = register:filename
                  }
                  3 = TEXT
                  3 {
                    if.isTrue = ###TX_ORG_DOC.DOCUMENTSSIZE###
                    data      = register:fileSize
                    wrap      = <td class="csc-uploads-fileSize">(|)</td>
                    bytes     = 1
                    bytes {
                      labels = {$styles.content.uploads.filesizeBytesLabels}
                    }
                  }
                }
                30 {
                  if {
                    isTrue.field >
                    isTrue = ###TX_ORG_DOC.DOCUMENTSSIZE###
                  }
                  wrap = <td class="csc-uploads-fileSize">(|)</td>
                }
                30 >
              }
              linkProc {
                iconCObject {
                  file {
                    width   = ###TX_ORG_DOC.LINKICON_WIDTH###
                    height  = ###TX_ORG_DOC.LINKICON_HEIGHT###
                  }
                }
                tx_browser_pi1 = TEXT
                tx_browser_pi1 {
                  typolink {
                    parameter         = {$plugin.org.pages.doc}
                    additionalParams  = &tx_browser_pi1[docUid]=###TX_ORG_DOC.UID###&tx_browser_pi1[download]=###FILENAME###
                    useCacheHash      = 1
                    returnLast        = url
                  }
                }
              }
              tableField = tx_org_doc.documents
              fields {
                from_path = ###TX_ORG_DOC.DOCUMENTS_FROM_PATH###
                files     = ###TX_ORG_DOC.DOCUMENTS###
                files {
                  override = ###TX_ORG_DOC.THUMBNAIL###
                }
                layout    = ###TX_ORG_DOC.DOCUMENTSLAYOUT###
              }
              stdWrap {
                if.isTrue = ###TX_ORG_DOC.THUMBNAIL######TX_ORG_DOC.DOCUMENTS######TX_ORG_DOC.DOCUMENTS_FROM_PATH###
              }
            }
          }
        }
      }
    }
  }
  
  _LOCAL_LANG {
    default {
      list_mode_401_titleTag      = TYPO3 Organiser - Documents
      list_mode_401_keywords      = TYPO3, Organiser, Documents
      list_mode_401_summary       = TYPO3 Organiser: Documents
      single_mode_401_titleTag    = TYPO3 Organiser - ###TX_ORG_DOC.TITLE###
      single_mode_401_keywords    = TYPO3 Organiser, ###TX_ORG_DOC.KEYWORDS###
      single_mode_401_summary     = TYPO3 Organiser - Documents: ###TX_ORG_DOC.DESCRIPTION###
    }
    de {
      list_mode_401_titleTag      = TYPO3 Organiser - Dokumente
      list_mode_401_keywords      = TYPO3, Organiser,  Dokumente
      list_mode_401_summary       = TYPO3 Organiser: Dokumente
      single_mode_401_titleTag    = TYPO3 Organiser: ###TX_ORG_DOC.TITLE###
      single_mode_401_keywords    = TYPO3 Organiser, ###TX_ORG_DOC.KEYWORDS###
      single_mode_401_summary     = TYPO3 Organiser - Nachricht: ###TX_ORG_DOC.DESCRIPTION###
    }
  }
}


  ////////////////////////////////////////
  //
  // Header Comment

page.config.headerComment (
        TYPO3-Programmierung: die-netzmacher.de
)
  // Header Comment